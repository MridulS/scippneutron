parameters:
- name: verbose
  displayName: Verbose
  type: boolean
  default: false

resources:
  repositories:
  - repository: SharedPipelines
    name: scipp/pipelines
    type: github
    endpoint: scipp
    ref: main

trigger:
  tags:
    include:
      - '*.*.*'

pr: none

extends:
  template: stages.yml@SharedPipelines
  parameters:
    verbose: ${{ parameters.verbose }}
    conda_channels: '--channel scipp --channel ess-dmsc'
    gh_pages_subdirectory: 'scippneutron'
    config:
      linux:
        py_versions: ['3.7', '3.8']
        conda_env: 'scippneutron-developer.yml'
      osx:
        py_versions: ['3.7', '3.8']
        conda_env: 'scippneutron-developer-no-mantid.yml'
      windows:
        py_versions: ['3.7', '3.8']
        conda_env: 'scippneutron-developer-no-mantid.yml'
    deploy: true
    conda_label: 'main'
    release: true




# stages:
#   - template: templates/code_quality_checks.yml

#   - stage: 'build_and_test'
#     displayName: 'Conda Package Build and Unit Tests'

#     jobs:
#       - job: 'linux'
#         displayName: 'Linux'
#         timeoutInMinutes: 60
#         strategy:
#           matrix:
#             Python37:
#               PYTHON_VERSION: '3.7'
#         pool:
#           vmImage: 'ubuntu-20.04'
#         variables:
#           - group: tokens
#         steps:
#           - checkout: self
#             submodules: true
#           - bash: |
#               echo "##vso[task.prependpath]$CONDA/bin"
#               echo "##vso[task.setvariable variable=conda_dir]$CONDA"
#             displayName: 'Configure Conda directories'
#           - bash: |
#               set -ex
#               conda --version
#               conda install --yes anaconda-client conda-build
#               conda config --set always_yes yes --set changeps1 no
#             displayName: 'Conda configuration'
#           - bash: |
#               conda build --user scipp --token "$ANACONDA_TOKEN" --channel conda-forge --channel scipp --channel ess-dmsc --python="$PYTHON_VERSION" ./conda
#             env:
#               ANACONDA_TOKEN: $(anaconda_token_secret)
#             displayName: 'Package build'
#           - task: PublishBuildArtifacts@1
#             inputs:
#               PathtoPublish: "$(conda_dir)/conda-bld/linux-64"
#               ArtifactName: 'linux-64'
#             displayName: 'Publish Conda package artefacts'

#       - job: 'mac'
#         displayName: 'Mac OS'
#         timeoutInMinutes: 80
#         pool:
#           vmImage: 'macOS-10.14'
#         variables:
#           - group: tokens
#           - name: OSX_VERSION
#             value: '10.15'
#         steps:
#           - checkout: self
#             submodules: true
#           - bash: |
#               echo "##vso[task.prependpath]$CONDA/bin"
#               echo "##vso[task.setvariable variable=conda_dir]$CONDA"
#             displayName: 'Configure Conda directories'
#           - bash: |
#               sudo chown -R $USER $CONDA
#             displayName: 'Take ownership of Conda installation'
#           - bash: |
#               set -ex
#               conda --version
#               conda install --yes anaconda-client conda-build
#               conda config --set always_yes yes --set changeps1 no
#             displayName: 'Conda configuration'
#           - bash: |
#               conda build --user scipp --token "$ANACONDA_TOKEN" --channel conda-forge --channel scipp --channel ess-dmsc ./conda
#             env:
#               ANACONDA_TOKEN: $(anaconda_token_secret)
#             displayName: 'Package build'
#           - task: PublishBuildArtifacts@1
#             inputs:
#               PathtoPublish: '$(conda_dir)/conda-bld/osx-64'
#               ArtifactName: 'osx-64'
#             displayName: 'Publish Conda package artefacts'

#       - job: 'windows'
#         displayName: 'Windows'
#         timeoutInMinutes: 120
#         strategy:
#           matrix:
#             Python37:
#               PYTHON_VERSION: '3.7'
#             Python38:
#               PYTHON_VERSION: '3.8'
#         pool:
#           vmImage: 'windows-latest'
#         variables:
#           - group: tokens
#         steps:
#           - checkout: self
#             submodules: true
#           - powershell: |
#               Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
#               Write-Host "##vso[task.setvariable variable=conda_dir]$env:CONDA"
#             displayName: 'Configure Conda directories'
#           - script: |
#               conda --version
#               conda install --yes anaconda-client conda-build
#               conda config --set always_yes yes --set changeps1 no
#             displayName: 'Conda configuration'
#           - script: |
#               conda build --user scipp --token "%ANACONDA_TOKEN%" --channel conda-forge --channel scipp --python="%PYTHON_VERSION%" ./conda
#             env:
#               ANACONDA_TOKEN: $(anaconda_token_secret)
#             displayName: 'Package build'
#           - task: PublishBuildArtifacts@1
#             inputs:
#               PathtoPublish: '$(conda_dir)/conda-bld/win-64'
#               ArtifactName: 'win-64'
#             displayName: 'Publish Conda package artefacts'

#   - stage: 'post_build_checks'
#     displayName: 'Post Build Checks'

#     jobs:
#       - template: templates/documentation_build.yml
#       - template: templates/test_can_install_and_import.yml

#   - stage: 'deploy'
#     displayName: 'Deployment'

#     jobs:
#       - template: templates/documentation_deploy.yml
#         parameters:
#           release: True
